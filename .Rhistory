library(dsur)
library(DSUR)
install.packages("DSUR")
update.packages(ask = FALSE)
update.packages(ask=FALSE)
update.packages(ask=FALSE)
summary(mtcars)
mpg
library(ggplot2)
mpg
?mpg
?geom_point
install.packages(c("emmeans", "rlang", "rmarkdown", "xfun"))
install.packages(c("brms", "gtools", "haven", "highr", "httpuv", "later", "mgcv", "munsell", "mvtnorm", "packrat", "purrr", "reprex", "rlang", "rmarkdown", "stringi", "zoo"), lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
shiny::runApp('/Volumes/GoogleDrive/My Drive/Cal Lutheran/6. CLU DBT Track/DBT Coursework Material/5. Mindfulness Class/PQM/PSYD777')
update.packages(ask=FALSE)
df <- iris
cor_results <- cor.test(df$Sepal.Length, df$Petal.Length)  # Compute a correlation and store its result
cor_results
devtools::install_github("neuropsychology/psycho.R")
library(psycho)
psycho::analyze(cor_results)
results <- analyze(cor_results)
summary(results)
knitr::kable(results)
knitr::kable(summary((results))
)
?httr
library(httr)
?httr
install.packages(c("jmvcore", "tidybayes"))
install.packages(c("bayesplot", "igraph", "openssl"), lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(httr)
if (!file.exists('data.csv')) {
data <- GET('github.com/cgonza12/Soccer//?action=download',
write_disk('data.csv', overwrite = TRUE))
}
ls()
s1 <- read.csv('data.csv')
names(s1)
ls()
data
## Get Data from OSF Page: https://osf.io/38bjg/
if (!file.exists('FinalData/study1.csv')) {
data <- GET('osf.io/qxbs2//?action=download',
write_disk('data/study1.csv', overwrite = TRUE))
} # Make sure 'data' directory exists
s1 <- read.csv('data/study1.csv')
if (!file.exists('FinalData/study1.csv')) {
data <- GET('osf.io/qxbs2//?action=download',
write_disk('study1.csv', overwrite = TRUE))
}
ls()
s1 <- read.csv('study1.csv')
s1
if (!file.exists('data.csv')) {
data1 <- GET('github.com/cgonza12/Soccer//?action=download',
write_disk('data.csv', overwrite = TRUE))
} # Make sure 'data' directory exists
ls()
if (!file.exists('data.csv')) {
data1 <- GET('github.com/cgonza12/Soccer/',
write_disk('data.csv', overwrite = TRUE))
} # Make sure 'data' directory exists
ls()
if (!file.exists('data.csv')) {
data1 <- GET('https://github.com/cgonza12/Soccer/blob/master/data.csv',
write_disk('data.csv', overwrite = TRUE))
} # Make sure 'data' directory exists
ls()
if (!file.exists('data.csv')) {
data1 <- GET('https://github.com/cgonza12/Soccer/blob/master/data.csv//?action=download',
write_disk('data.csv', overwrite = TRUE))
} # Make sure 'data' directory exists
ls()
if (!file.exists('data.csv')) {
data1 <- GET('github.com/cgonza12/Soccer/blob/master///?action=download',
write_disk('data.csv', overwrite = TRUE))
}
ls()
if (!file.exists('data.csv')) {
data1 <- GET('github.com/cgonza12/Soccer/blob/master//?action=download',
write_disk('data.csv', overwrite = TRUE))
} # Make sure 'data' directory exists
ls()
s1 <- read.csv('data.csv')
ls()
s1
names(s1)
require(RCurl)
redcard <-read.csv(text=getURL("https://raw.githubusercontent.com/cgonza12/Soccer/master/data.csv"))
names(redcard)
redcard1 <-readr::read_csv(text=getURL("https://raw.githubusercontent.com/cgonza12/Soccer/master/data.csv"))
ls(0)
ls()
summary(redcard)
str(redcard)
if (!file.exists('Crowdsourcing Dataset July 01, 2014 Incl.Ref Country.zip')) {
rczip <- GET('osf.io/fv8c3///?action=download',
write_disk('rc.zip', overwrite = TRUE))
} #
ls()
unzip(rczip)
unzip(rc.zip)
rczip
zip.file.extract(rczip, zipname = "rc.zip", unzip = getOption("unzip"))
for (i in dir(pattern="\.zip$"))
unzip(i)
today = as.Date(Sys.time())
today
forecasturl = paste('https://osf.io/fv8c3/',
gsub('-', '', today),
'Crowdsourcing Dataset July 01, 2014 Incl.Ref Country.zip', sep='')
td = tempdir()
tf = tempfile(tmpdir=td, fileext=".zip")
download.file(forecasturl, tf)
forecasturl = paste('https://osf.io/fv8c3/',
gsub('-', '', today),
'1. Crowdsourcing Dataset July 01, 2014 Incl.Ref Country.zip', sep='')
td = tempdir()
tf = tempfile(tmpdir=td, fileext=".zip")
download.file(forecasturl, tf)
forecasturl = paste('https://osf.io/fv8c3/',
gsub('-', '', today),
'CrowdstormingDataJuly1st.csv', sep='')
download.file(forecasturl, tf)
ls()
fname = unzip(rczip, list=TRUE)$Name[1]
download.file("https://osf.io/fv8c3/", "data.zip")
ls()
unzip("data.zip")
ls()
unzip("data")
download.file("https://osf.io/fv8c3/")
remove(ls="True")
remove(ls="True")
ls()
library(RCurl)
redcard <-read.csv(text=getURL("https://raw.githubusercontent.com/cgonza12/Soccer/master/data.csv"))
redcard.tb <- tidy::as.tibble(redcard)
redcard.tb <- tibble::as.tibble(redcard)
redcard.tb
if (!file.exists('p-curve disclosure table for Power Posing review - 2016 09 26.xlsx')) {
ppzip <- GET('osf.io/2fq9c///?action=download',
write_disk('pp.zip', overwrite = TRUE))
} #
library(read_xl)
library(readxl)
read_excel("p-curve disclosure table for Power Posing review - 2016 09 26.xlsx")
if (!file.exists('p-curve disclosure table for Power Posing review - 2016 09 26.xlsx')) {
data <- GET('osf.io/2fq9c//?action=download',
write_disk('pp.xlsx', overwrite = TRUE))
}
s5 <- read_excel('pp.xlsx')
names(s5)
View(s5)
redcard.tb
ls()
str(data)
pp.tb <- read_excel('pp.xlsx')
pp.tb
install.packages(c("elliptic", "sjmisc", "TOSTER"))
